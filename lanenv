#! /bin/zsh
# Scan network interfaces and if active, print the connecton specifications.
# Also, scan the local subnet for other connected devices.

for INTERFACE in "en0" "en1"; do

    NET_ENV="$(ipconfig getpacket $INTERFACE)";

    if [ $NET_ENV ]; then

        # Get my IP Address
        # Check if static ip or dhcp
        STATIC_IP="$(echo $NET_ENV | grep "ciaddr" | awk '{print $3}')";
        DHCP_IP="$(echo $NET_ENV | grep "yiaddr" | awk '{print $3}')";
        if [ $STATIC_IP != "0.0.0.0" ]; then
            print -f "IP Address:\t%s(static)\n" $STATIC_IP;
            MY_IP="$(echo $STATIC_IP)";
        else
            print -f "IP Address:\t%s (DHCP)\n" $DHCP_IP;
            MY_IP="$(echo $DHCP_IP)";
        fi;

        # Get my MAC Address for this interface.
        MAC_ADDRESS="$(echo $NET_ENV | grep "chaddr" | awk '{print $3}')";
        print -f "MAC Address:\t%s\n" $MAC_ADDRESS;

        # Get the router IP Address
        ROUTER_IP="$(echo $NET_ENV | grep "siaddr" | awk '{print $3}')";
        print -f "Router IP:\t%s\n" $ROUTER_IP;

        # Display WiFi Settings if the active interface is wireless
        if [ $INTERFACE=="en1" ]; then
            # Get Wifi SSID
            SSID="$(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I | grep -E '^\s*SSID:' | awk '{print $2}')";
            print -f "WLAN Name:\t%s\n" $SSID;

            # Get the Wireless base station ID
            BSSID="$(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I | grep BSSID | grep -Eo '([0-9a-zA-Z]{1,2}:){5}[0-9a-zA-Z]{1,2}' )";
            print -f "WLAN MAC ID:\t%s\n" $BSSID;
        fi;

        # Get the DNS Server
        DNS_SERVER="$(echo $NET_ENV | grep "domain_name_server" | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}')";
        print -f "DNS Server:\t%s\n" $DNS_SERVER;

        # Get the router's public IP Address
        ROUTER_PUBLIC_IP="$(curl -s http://checkip.dyndns.org | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}')";
        print -f "Public IP:\t%s\n" $ROUTER_PUBLIC_IP;

        # Get the subnet for this interface and use it to scan the network for hosts
        SUBNET="$(echo $ROUTER_IP | sed -E "s/^(([0-9]{1,3}\.){3})([0-9]{1,3})/\1*/")";
        DISCOVERED_HOSTS=("${(@f)$(nmap -sP -T4 $SUBNET | grep "Nmap scan report")}");

        # Display discovered host information
        print -l "";
        print -f "     Discovered Hosts (%s)\n" $INTERFACE;
        print "\--------------------------------";
        for HOST in $DISCOVERED_HOSTS; do
            HOST_NAME="$(echo $HOST | awk '{print $5}' | sed -E "s/^([A-Za-z0-9_\-]+)\.home/\1/")";
            HOST_IP="$(echo $HOST | awk '{print $6}' | sed -E "s/^\((([0-9]{1,3}\.){3}[0-9]{1,3})\)/\1/")";
            if [[ ($HOST_IP != $MY_IP) && ($HOST_IP != $ROUTER_IP) ]]; then
                print -f "%-16s%s\n" $HOST_IP $HOST_NAME;
            fi;
        done
    fi;
done
